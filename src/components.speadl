import fr.sma.speadl.ActionHandler
import fr.sma.speadl.EnvironmentRenderer
import fr.sma.speadl.EnvironmentUpdater
import fr.sma.speadl.GridDataProvider
import fr.sma.speadl.GridUpdater
import fr.sma.speadl.GuiConnector
import fr.sma.speadl.MoveHandler
import java.util.logging.MemoryHandler

namespace DiezeFond {

	/* Robot components */
	component RobotMemory {
		provides memoryHandler: MemoryHandler
	}
	
	component RobotActionManager {
		provides actionHandler: ActionHandler
		requires memoryHandler: MemoryHandler
	}
	
	/* Environment components */
	component EnvironmentMove {
		requires actionHandler: ActionHandler
		requires updateGrid: GridUpdater
		provides moveHandler: MoveHandler
	}
	
	component EnvironmentClock {
		requires renderEnvironment: EnvironmentRenderer
		requires moveHandler: MoveHandler
	}
	
	component GridManager {
		provides updateEnvironment: EnvironmentUpdater
		provides updateGrid: GridUpdater
		provides dataProvider: GridDataProvider
	}
	
	/* GUI components */
	component AppGUI {
		provides guiLink : GuiConnector
		requires updateEnvironment: EnvironmentUpdater
	}
	
	component EnvironmentGUI {
		requires guiLink : GuiConnector
		provides renderEnvironment: EnvironmentRenderer
		requires dataProvider: GridDataProvider
	}

	ecosystem EcoEnvironment {
		provides actionHandler : ActionHandler
		provides gridHandler : EnvironmentUpdater = gridManager.updateEnvironment
		provides environmentGuiHandler : EnvironmentRenderer = environmentGui.renderEnvironment
		species Robot (id : String) {
			part memory: RobotMemory
			part actionManager: RobotActionManager {
				bind memoryHandler to memory.memoryHandler
			}
			provides robotActionHandler : ActionHandler = actionManager.actionHandler
		}

		part appGui : AppGUI {
			bind updateEnvironment to gridManager.updateEnvironment
		}

		part clock: EnvironmentClock {
			bind moveHandler to move.moveHandler
			bind renderEnvironment to environmentGui.renderEnvironment
		}

		part move: EnvironmentMove {
			bind updateGrid to gridManager.updateGrid
			bind actionHandler to actionHandler
		}
		
		part gridManager : GridManager
		part environmentGui : EnvironmentGUI {
			bind dataProvider to gridManager.dataProvider
			bind guiLink to appGui.guiLink
		}
	}	
}